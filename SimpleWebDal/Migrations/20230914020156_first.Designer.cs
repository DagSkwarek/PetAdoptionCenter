// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SimpleWebDal.Data;

#nullable disable

namespace SimpleWebDal.Migrations
{
    [DbContext(typeof(PetAdoptionCenterContext))]
    [Migration("20230914020156_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SimpleWebDal.Models.AdoptionProccess.Adoption", b =>
                {
                    b.Property<int>("AdoptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AdoptionId"));

                    b.Property<DateTime>("DateOfAdoption")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("AdoptionId");

                    b.HasIndex("AdoptionId")
                        .IsUnique();

                    b.ToTable("AdoptionInfos");
                });

            modelBuilder.Entity("SimpleWebDal.Models.Animal.BasicHealthInfo", b =>
                {
                    b.Property<int>("BasicHealthInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BasicHealthInfoId"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PetId")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("BasicHealthInfoId");

                    b.HasIndex("BasicHealthInfoId")
                        .IsUnique();

                    b.HasIndex("PetId")
                        .IsUnique();

                    b.ToTable("BasicHealthInfos");
                });

            modelBuilder.Entity("SimpleWebDal.Models.Animal.Disease", b =>
                {
                    b.Property<int>("DiseaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DiseaseId"));

                    b.Property<int>("BasicHealthInfoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("IllnessEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("IllnessStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameOfdisease")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DiseaseId");

                    b.HasIndex("BasicHealthInfoId");

                    b.HasIndex("DiseaseId")
                        .IsUnique();

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("SimpleWebDal.Models.Animal.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PetId"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("integer");

                    b.Property<int>("AdoptionId")
                        .HasColumnType("integer");

                    b.Property<bool>("AvaibleForAdoption")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer");

                    b.Property<int>("ProfileIdForVirtualAdoptionId")
                        .HasColumnType("integer");

                    b.Property<int>("ShelterListOfPetsAdoptedId")
                        .HasColumnType("integer");

                    b.Property<int>("ShelterListOfPetsId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("TempHouseId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("PetId");

                    b.HasIndex("ActivityId")
                        .IsUnique();

                    b.HasIndex("AdoptionId")
                        .IsUnique();

                    b.HasIndex("PetId")
                        .IsUnique();

                    b.HasIndex("ProfileId");

                    b.HasIndex("ProfileIdForVirtualAdoptionId");

                    b.HasIndex("ShelterListOfPetsAdoptedId");

                    b.HasIndex("ShelterListOfPetsId");

                    b.HasIndex("TempHouseId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("SimpleWebDal.Models.Animal.Vaccination", b =>
                {
                    b.Property<int>("VaccinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VaccinationId"));

                    b.Property<int>("BasicHealthInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("VaccinationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("VaccinationId");

                    b.HasIndex("BasicHealthInfoId");

                    b.HasIndex("VaccinationId")
                        .IsUnique();

                    b.ToTable("Vaccinations");
                });

            modelBuilder.Entity("SimpleWebDal.Models.CalendarModel.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ActivityId"));

                    b.Property<DateTime>("AcctivityDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CalendarId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ActivityId");

                    b.HasIndex("ActivityId")
                        .IsUnique();

                    b.HasIndex("CalendarId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("SimpleWebDal.Models.CalendarModel.CalendarModelClass", b =>
                {
                    b.Property<int>("CalendarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CalendarId"));

                    b.Property<DateTime>("DateWithTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PetId")
                        .HasColumnType("integer");

                    b.Property<int>("ShelterId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("CalendarId");

                    b.HasIndex("CalendarId")
                        .IsUnique();

                    b.HasIndex("PetId")
                        .IsUnique();

                    b.HasIndex("ShelterId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Calendars");
                });

            modelBuilder.Entity("SimpleWebDal.Models.PetShelter.Shelter", b =>
                {
                    b.Property<int>("ShelterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ShelterId"));

                    b.Property<int>("AdoptionId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PetId")
                        .HasColumnType("integer");

                    b.Property<string>("ShelterDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TempHouseId")
                        .HasColumnType("integer");

                    b.HasKey("ShelterId");

                    b.HasIndex("AdoptionId")
                        .IsUnique();

                    b.HasIndex("PetId")
                        .IsUnique();

                    b.HasIndex("ShelterId")
                        .IsUnique();

                    b.HasIndex("TempHouseId")
                        .IsUnique();

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("SimpleWebDal.Models.ProfileUser.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProfileId"));

                    b.Property<int>("UserLoggedUserId")
                        .HasColumnType("integer");

                    b.HasKey("ProfileId");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.HasIndex("UserLoggedUserId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SimpleWebDal.Models.TemporaryHouse.TempHouse", b =>
                {
                    b.Property<int>("TempHouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TempHouseId"));

                    b.Property<DateTime>("StartOfTemporaryHouseDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("TempHouseId");

                    b.HasIndex("TempHouseId")
                        .IsUnique();

                    b.ToTable("TempHouses");
                });

            modelBuilder.Entity("SimpleWebDal.Models.WebUser.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AddressId"));

                    b.Property<int>("BasicInformationId")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FlatNumber")
                        .HasColumnType("integer");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("ShelterId")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TempHouseId")
                        .HasColumnType("integer");

                    b.HasKey("AddressId");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("BasicInformationId")
                        .IsUnique();

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.HasIndex("ShelterId")
                        .IsUnique();

                    b.HasIndex("TempHouseId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("SimpleWebDal.Models.WebUser.BasicInformation", b =>
                {
                    b.Property<int>("BasicInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BasicInformationId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("BasicInformationId");

                    b.HasIndex("BasicInformationId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("BasicInformations");
                });

            modelBuilder.Entity("SimpleWebDal.Models.WebUser.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("RoleId");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SimpleWebDal.Models.WebUser.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("AdoptionId")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PetId")
                        .HasColumnType("integer");

                    b.Property<int>("ShelterContributorsId")
                        .HasColumnType("integer");

                    b.Property<int>("ShelterId")
                        .HasColumnType("integer");

                    b.Property<int>("ShelterWorkersId")
                        .HasColumnType("integer");

                    b.Property<int>("TempHouseId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("AdoptionId")
                        .IsUnique();

                    b.HasIndex("PetId");

                    b.HasIndex("ShelterContributorsId");

                    b.HasIndex("ShelterId")
                        .IsUnique();

                    b.HasIndex("ShelterWorkersId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SimpleWebDal.Models.Animal.BasicHealthInfo", b =>
                {
                    b.HasOne("SimpleWebDal.Models.Animal.Pet", "Pet")
                        .WithOne("BasicHealthInfo")
                        .HasForeignKey("SimpleWebDal.Models.Animal.BasicHealthInfo", "PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("SimpleWebDal.Models.Animal.Disease", b =>
                {
                    b.HasOne("SimpleWebDal.Models.Animal.BasicHealthInfo", "BasicHealthInfo")
                        .WithMany("MedicalHistory")
                        .HasForeignKey("BasicHealthInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BasicHealthInfo");
                });

            modelBuilder.Entity("SimpleWebDal.Models.Animal.Pet", b =>
                {
                    b.HasOne("SimpleWebDal.Models.CalendarModel.Activity", "Activity")
                        .WithOne("Pet")
                        .HasForeignKey("SimpleWebDal.Models.Animal.Pet", "ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.AdoptionProccess.Adoption", "Adoption")
                        .WithOne("PetToAdoption")
                        .HasForeignKey("SimpleWebDal.Models.Animal.Pet", "AdoptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.ProfileUser.Profile", "Profile")
                        .WithMany("FavouriteListPets")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.ProfileUser.Profile", "ProfileForVirtualAdoption")
                        .WithMany("VirtualAdoptionPetsList")
                        .HasForeignKey("ProfileIdForVirtualAdoptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.PetShelter.Shelter", "ShelterListOfPetsAdopted")
                        .WithMany("ListOfPetsAdopted")
                        .HasForeignKey("ShelterListOfPetsAdoptedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.PetShelter.Shelter", "ShelterListOfPets")
                        .WithMany("ListOfPets")
                        .HasForeignKey("ShelterListOfPetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.TemporaryHouse.TempHouse", "TempHouse")
                        .WithMany("PetsInTemporaryHouse")
                        .HasForeignKey("TempHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Adoption");

                    b.Navigation("Profile");

                    b.Navigation("ProfileForVirtualAdoption");

                    b.Navigation("ShelterListOfPets");

                    b.Navigation("ShelterListOfPetsAdopted");

                    b.Navigation("TempHouse");
                });

            modelBuilder.Entity("SimpleWebDal.Models.Animal.Vaccination", b =>
                {
                    b.HasOne("SimpleWebDal.Models.Animal.BasicHealthInfo", "BasicHealthInfo")
                        .WithMany("Vaccinations")
                        .HasForeignKey("BasicHealthInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BasicHealthInfo");
                });

            modelBuilder.Entity("SimpleWebDal.Models.CalendarModel.Activity", b =>
                {
                    b.HasOne("SimpleWebDal.Models.CalendarModel.CalendarModelClass", "Calendar")
                        .WithMany("Activities")
                        .HasForeignKey("CalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calendar");
                });

            modelBuilder.Entity("SimpleWebDal.Models.CalendarModel.CalendarModelClass", b =>
                {
                    b.HasOne("SimpleWebDal.Models.Animal.Pet", "Pet")
                        .WithOne("Callendar")
                        .HasForeignKey("SimpleWebDal.Models.CalendarModel.CalendarModelClass", "PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.PetShelter.Shelter", "Shelter")
                        .WithOne("ShelterCalendar")
                        .HasForeignKey("SimpleWebDal.Models.CalendarModel.CalendarModelClass", "ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.WebUser.User", "User")
                        .WithOne("UserCalendar")
                        .HasForeignKey("SimpleWebDal.Models.CalendarModel.CalendarModelClass", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("Shelter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SimpleWebDal.Models.PetShelter.Shelter", b =>
                {
                    b.HasOne("SimpleWebDal.Models.AdoptionProccess.Adoption", "Adoption")
                        .WithOne("Shelter")
                        .HasForeignKey("SimpleWebDal.Models.PetShelter.Shelter", "AdoptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.Animal.Pet", "Pet")
                        .WithOne("Shelter")
                        .HasForeignKey("SimpleWebDal.Models.PetShelter.Shelter", "PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.TemporaryHouse.TempHouse", "TempHouse")
                        .WithOne("ShelterName")
                        .HasForeignKey("SimpleWebDal.Models.PetShelter.Shelter", "TempHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adoption");

                    b.Navigation("Pet");

                    b.Navigation("TempHouse");
                });

            modelBuilder.Entity("SimpleWebDal.Models.ProfileUser.Profile", b =>
                {
                    b.HasOne("SimpleWebDal.Models.WebUser.User", "UserLogged")
                        .WithMany()
                        .HasForeignKey("UserLoggedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserLogged");
                });

            modelBuilder.Entity("SimpleWebDal.Models.WebUser.Address", b =>
                {
                    b.HasOne("SimpleWebDal.Models.WebUser.BasicInformation", "BasicInformation")
                        .WithOne("Address")
                        .HasForeignKey("SimpleWebDal.Models.WebUser.Address", "BasicInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.WebUser.Role", "Role")
                        .WithOne("Address")
                        .HasForeignKey("SimpleWebDal.Models.WebUser.Address", "RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.PetShelter.Shelter", "Shelter")
                        .WithOne("ShelterAddress")
                        .HasForeignKey("SimpleWebDal.Models.WebUser.Address", "ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.TemporaryHouse.TempHouse", "TempHouse")
                        .WithOne("TemporaryHouseAddress")
                        .HasForeignKey("SimpleWebDal.Models.WebUser.Address", "TempHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BasicInformation");

                    b.Navigation("Role");

                    b.Navigation("Shelter");

                    b.Navigation("TempHouse");
                });

            modelBuilder.Entity("SimpleWebDal.Models.WebUser.BasicInformation", b =>
                {
                    b.HasOne("SimpleWebDal.Models.WebUser.User", "User")
                        .WithOne("BasicInformation")
                        .HasForeignKey("SimpleWebDal.Models.WebUser.BasicInformation", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SimpleWebDal.Models.WebUser.Role", b =>
                {
                    b.HasOne("SimpleWebDal.Models.WebUser.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SimpleWebDal.Models.WebUser.User", b =>
                {
                    b.HasOne("SimpleWebDal.Models.AdoptionProccess.Adoption", "Adoption")
                        .WithOne("Adopter")
                        .HasForeignKey("SimpleWebDal.Models.WebUser.User", "AdoptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.Animal.Pet", "Pet")
                        .WithMany("PatronUsers")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.PetShelter.Shelter", "ShelterContributors")
                        .WithMany("ShelterContributors")
                        .HasForeignKey("ShelterContributorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.PetShelter.Shelter", "Shelter")
                        .WithOne("ShelterOwner")
                        .HasForeignKey("SimpleWebDal.Models.WebUser.User", "ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.PetShelter.Shelter", "ShelterWorkers")
                        .WithMany("ShelterWorkers")
                        .HasForeignKey("ShelterWorkersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleWebDal.Models.TemporaryHouse.TempHouse", "TempHouse")
                        .WithOne("TemporaryOwner")
                        .HasForeignKey("SimpleWebDal.Models.WebUser.User", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adoption");

                    b.Navigation("Pet");

                    b.Navigation("Shelter");

                    b.Navigation("ShelterContributors");

                    b.Navigation("ShelterWorkers");

                    b.Navigation("TempHouse");
                });

            modelBuilder.Entity("SimpleWebDal.Models.AdoptionProccess.Adoption", b =>
                {
                    b.Navigation("Adopter")
                        .IsRequired();

                    b.Navigation("PetToAdoption")
                        .IsRequired();

                    b.Navigation("Shelter")
                        .IsRequired();
                });

            modelBuilder.Entity("SimpleWebDal.Models.Animal.BasicHealthInfo", b =>
                {
                    b.Navigation("MedicalHistory");

                    b.Navigation("Vaccinations");
                });

            modelBuilder.Entity("SimpleWebDal.Models.Animal.Pet", b =>
                {
                    b.Navigation("BasicHealthInfo")
                        .IsRequired();

                    b.Navigation("Callendar")
                        .IsRequired();

                    b.Navigation("PatronUsers");

                    b.Navigation("Shelter")
                        .IsRequired();
                });

            modelBuilder.Entity("SimpleWebDal.Models.CalendarModel.Activity", b =>
                {
                    b.Navigation("Pet")
                        .IsRequired();
                });

            modelBuilder.Entity("SimpleWebDal.Models.CalendarModel.CalendarModelClass", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("SimpleWebDal.Models.PetShelter.Shelter", b =>
                {
                    b.Navigation("ListOfPets");

                    b.Navigation("ListOfPetsAdopted");

                    b.Navigation("ShelterAddress")
                        .IsRequired();

                    b.Navigation("ShelterCalendar")
                        .IsRequired();

                    b.Navigation("ShelterContributors");

                    b.Navigation("ShelterOwner")
                        .IsRequired();

                    b.Navigation("ShelterWorkers");
                });

            modelBuilder.Entity("SimpleWebDal.Models.ProfileUser.Profile", b =>
                {
                    b.Navigation("FavouriteListPets");

                    b.Navigation("VirtualAdoptionPetsList");
                });

            modelBuilder.Entity("SimpleWebDal.Models.TemporaryHouse.TempHouse", b =>
                {
                    b.Navigation("PetsInTemporaryHouse");

                    b.Navigation("ShelterName")
                        .IsRequired();

                    b.Navigation("TemporaryHouseAddress")
                        .IsRequired();

                    b.Navigation("TemporaryOwner")
                        .IsRequired();
                });

            modelBuilder.Entity("SimpleWebDal.Models.WebUser.BasicInformation", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("SimpleWebDal.Models.WebUser.Role", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("SimpleWebDal.Models.WebUser.User", b =>
                {
                    b.Navigation("BasicInformation")
                        .IsRequired();

                    b.Navigation("Roles");

                    b.Navigation("UserCalendar")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
